{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Move = void 0;\n\nconst Attract_1 = require(\"./Attract\");\n\nconst Enums_1 = require(\"../../../../Enums\");\n\nconst Trail_1 = require(\"./Trail\");\n\nconst Noise_1 = require(\"./Noise/Noise\");\n\nconst MoveAngle_1 = require(\"./MoveAngle\");\n\nconst MoveGravity_1 = require(\"./MoveGravity\");\n\nconst OutModes_1 = require(\"./OutModes\");\n\nclass Move {\n  constructor() {\n    this.angle = new MoveAngle_1.MoveAngle();\n    this.attract = new Attract_1.Attract();\n    this.direction = Enums_1.MoveDirection.none;\n    this.distance = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity_1.MoveGravity();\n    this.noise = new Noise_1.Noise();\n    this.outModes = new OutModes_1.OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.straight = false;\n    this.trail = new Trail_1.Trail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n\n  get collisions() {\n    return false;\n  }\n\n  set collisions(value) {}\n\n  get bounce() {\n    return this.collisions;\n  }\n\n  set bounce(value) {\n    this.collisions = value;\n  }\n\n  get out_mode() {\n    return this.outMode;\n  }\n\n  set out_mode(value) {\n    this.outMode = value;\n  }\n\n  get outMode() {\n    return this.outModes.default;\n  }\n\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n\n  load(data) {\n    var _a, _b;\n\n    if (data === undefined) {\n      return;\n    }\n\n    if (data.angle !== undefined) {\n      if (typeof data.angle === \"number\") {\n        this.angle.value = data.angle;\n      } else {\n        this.angle.load(data.angle);\n      }\n    }\n\n    this.attract.load(data.attract);\n\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n\n    if (data.distance !== undefined) {\n      this.distance = data.distance;\n    }\n\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n\n    this.gravity.load(data.gravity);\n    this.noise.load(data.noise);\n    const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n\n    if (data.outModes !== undefined || outMode !== undefined) {\n      if (typeof data.outModes === \"string\" || data.outModes === undefined && outMode !== undefined) {\n        this.outModes.load({\n          default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode\n        });\n      } else {\n        this.outModes.load(data.outModes);\n      }\n    }\n\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n\n    if (data.speed !== undefined) {\n      this.speed = data.speed;\n    }\n\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n\n    this.trail.load(data.trail);\n\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n\n}\n\nexports.Move = Move;","map":{"version":3,"sources":["C:/Users/pietr/Documents/Projects/upwork_friendkit_react/friendkit-1.1.3/friendkit-1.1.3-react/node_modules/tsparticles/dist/Options/Classes/Particles/Move/Move.js"],"names":["Object","defineProperty","exports","value","Move","Attract_1","require","Enums_1","Trail_1","Noise_1","MoveAngle_1","MoveGravity_1","OutModes_1","constructor","angle","MoveAngle","attract","Attract","direction","MoveDirection","none","distance","enable","gravity","MoveGravity","noise","Noise","outModes","OutModes","random","size","speed","straight","trail","Trail","vibrate","warp","collisions","bounce","out_mode","outMode","default","load","data","_a","_b","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Move = void 0;\nconst Attract_1 = require(\"./Attract\");\nconst Enums_1 = require(\"../../../../Enums\");\nconst Trail_1 = require(\"./Trail\");\nconst Noise_1 = require(\"./Noise/Noise\");\nconst MoveAngle_1 = require(\"./MoveAngle\");\nconst MoveGravity_1 = require(\"./MoveGravity\");\nconst OutModes_1 = require(\"./OutModes\");\nclass Move {\n    constructor() {\n        this.angle = new MoveAngle_1.MoveAngle();\n        this.attract = new Attract_1.Attract();\n        this.direction = Enums_1.MoveDirection.none;\n        this.distance = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity_1.MoveGravity();\n        this.noise = new Noise_1.Noise();\n        this.outModes = new OutModes_1.OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.straight = false;\n        this.trail = new Trail_1.Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        this.noise.load(data.noise);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\nexports.Move = Move;\n"]},"metadata":{},"sourceType":"script"}